
[[plugins]]
repo = 'ctrlpvim/ctrlp.vim'
on_map = [['n','<Plug>']]
hook_add = 'source ~/.config/nvim/rc/plugins/search.vim'

[[plugins]]
repo = 'Yggdroot/indentLine'
on_ft = ['py','js','jsx','html','css','go','vim']
hook_add = 'source ~/.config/nvim/rc/plugins/indentline.vim'

[[plugins]]
repo = 'liuchengxu/vim-which-key'
on_cmd = ['WhichKey', 'WhichKey!']
hook_add = 'source ~/.config/nvim/rc/plugins/whichkey.vim'
hook_post_source = '''
call which_key#register(',', 'g:which_key_map')
call which_key#register(';', 'g:which_key_localmap')
call which_key#register('[', 'g:which_key_rsbgmap')
call which_key#register('[', 'g:which_key_lsbgmap')
'''

[[plugins]]
repo = 'easymotion/vim-easymotion'
on_map = [['n','<Plug>']]
hook_source = '''
    let g:EasyMotion_do_mapping = 0
    let g:EasyMotion_prompt = 'Jump to â†’ '
    let g:EasyMotion_keys = 'fjdkswbeoavn'
    let g:EasyMotion_smartcase = 1
    let g:EasyMotion_use_smartsign_us = 1
'''

[[plugins]]
repo = 'scrooloose/nerdtree'
on_map = [['n','<Plug>']]
depends = ['vim-devicons','vim-nerdtree-syntax-highlight']
#hook_add = 'source ~/.config/nvim/rc/plugins/allkey.vim'
hook_source = 'source ~/.config/nvim/rc/plugins/nerdtree.vim'

[[plugins]]
repo = 'tiagofumo/vim-nerdtree-syntax-highlight'
hook_add = '''
let g:NERDTreeSyntaxDisableDefaultExtensions = 1
let g:NERDTreeDisableExactMatchHighlight = 1
let g:NERDTreeDisablePatternMatchHighlight = 1
let g:NERDTreeSyntaxEnabledExtensions = ['go', 'py', 'html', 'css', 'jsx', 'js', 'vim','json','md']
'''

[[plugins]]
repo = 'Shougo/defx.nvim'
on_cmd = 'Defx'
hook_source = 'source ~/.config/nvim/rc/plugins/defx.vim'

[[plugins]]
repo = 'kristijanhusak/defx-icons'
on_source = 'defx.nvim'

[[plugins]]
repo = 'airblade/vim-gitgutter'
on_path = ".*"
hook_add = 'source ~/.config/nvim/rc/plugins/vim-gitgutter.vim'

[[plugins]]
repo = 'majutsushi/tagbar'
on_cmd = ['TagbarToggle']
hook_source ='source ~/.config/nvim/rc/plugins/tagbar.vim'

[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['html','css','jsx','javascript','javascript.jsx']
on_event = 'InsertEnter'
hook_add ='''
    let g:use_emmet_complete_tag = 0
    let g:user_emmet_install_global = 0
    let g:user_emmet_install_command = 0
    let g:user_emmet_mode = 'i'
    let g:user_emmet_leader_key='<C-g>'
    let g:user_emmet_settings = {
        \  'javascript.jsx' : {
        \      'extends' : 'jsx',
        \  },
    \}
'''
[[plugins]]
repo = 'Raimondi/delimitMate'
on_event = 'InsertEnter'
hook_source = '''
    let g:delimitMate_expand_cr = 1
    let g:delimitMate_excluded_ft = 'html'
'''
[[plugins]]
repo = 'luochen1990/rainbow'
on_ft = ['py','js','jsx','html','css','go','vim','toml']
hook_source = 'let g:rainbow_active = 1'

[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['neosnippet-snippets']
on_event = 'InsertCharPre'
on_ft = 'snippet'
hook_add = '''
let g:neosnippet#snippets_directory='~/.config/nvim/rc/snippets/'
'''
hook_source = '''
source ~/.config/nvim/rc/plugins/neosnippet.vim
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'Shougo/denite.nvim'
on_cmd = 'Denite'
hook_source = 'source ~/.config/nvim/rc/plugins/denite.vim'
#hook_add = 'source ~/.config/nvim/rc/plugins/allkey.vim'


[[plugins]]
repo = 'w0rp/ale'
on_ft = ['py']
hook_add = 'source ~/.config/nvim/rc/plugins/vim-ale.vim'

[[plugins]]
repo = 'othree/html5.vim'
on_ft = ['html', 'javascript.jsx','vue'] 

[[plugins]]
repo = 'pangloss/vim-javascript'
on_ft = ['javascript', 'javascript.jsx']

[[plugins]]
repo = 'maxmellon/vim-jsx-pretty'
on_ft = ['javascript', 'javascript.jsx']
hook_add = '''
let g:vim_jsx_pretty_enable_jsx_highlight = 0
let g:vim_jsx_pretty_colorful_config = 1
'''

[[plugins]]
repo = 'mxw/vim-jsx'
on_ft = ['javascript', 'javascript.jsx']

[[plugins]]
repo = 'hail2u/vim-css3-syntax'
on_ft = ['css']

[[plugins]]
repo = 'ap/vim-css-color'
on_ft = ['css']

[[plugins]]
repo = 'fatih/vim-go'
on_ft = ['go']
hook_source = 'source ~/.config/nvim/rc/plugins/vim-go.vim'

[[plugins]]
repo = 'elzr/vim-json'
on_ft = ['json']
hook_add = 'let g:vim_json_syntax_conceal = 0 '

[[plugins]]
repo = 'cespare/vim-toml'
on_ft= ['toml']

[[plugins]]
repo = 'benekastah/neomake'
on_cmd = [ 'Neomake', 'NeomakeFile', 'NeomakeEnable' ]
hook_source = 'source ~/.config/nvim/rc/plugins/neomake.vim'
hook_add = '''
    let g:lint_types = [
      \   'python', 'vim', 'go', 'sh',
      \  'javascript', 'jsx', 'javascript.jsx', 'json', 'css',
      \  'markdown', 'html', 'yaml'
      \ ]
    autocmd MyAutoCmd BufWritePost *
      \  if expand('%:p') !~ $VIMPATH
      \      && index(g:lint_types, &filetype) > -1
      \      && empty(&buftype)
      \|   Neomake
      \| endif
'''
